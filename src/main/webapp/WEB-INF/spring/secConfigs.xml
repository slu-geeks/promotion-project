<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	 http://www.springframework.org/schema/security
	 http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<!--<global-method-security pre-post-annotations="enabled" />-->

	<http use-expressions="false" auto-config="true" disable-url-rewriting="true" >

        <intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/home" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/main" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/index" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/default" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>

        <intercept-url pattern="/about" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/contact" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/ads" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/buy-services" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/categories" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/donation" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/add-lang" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>

        <intercept-url pattern="/signup" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
		<intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
		<intercept-url pattern="/login-i" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>
        <intercept-url pattern="/fe/**" access="IS_AUTHENTICATED_ANONYMOUSLY" requires-channel="https"/>

		<intercept-url pattern="/dashboard/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/store/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/post/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/media/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/links/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/page/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/comments/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/feedback/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/appearance/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/user/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/tools/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>
		<intercept-url pattern="/settings/**" access="ROLE_SUPER_ADMIN" requires-channel="https"/>

		<form-login login-page="/login" default-target-url="/dashboard/home"
			authentication-failure-url="/login?error=true"
			login-processing-url="/s_login"
			username-parameter="username"
            password-parameter="password"
                />

		<session-management session-fixation-protection="newSession" >
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" expired-url="/login?duplicateLogin=ture" />
		</session-management>

		<logout delete-cookies="true" invalidate-session="true"
			logout-success-url="/"
            logout-url="/logout"
                />
        <port-mappings>
            <port-mapping http="8493" https="8443"/>
            <port-mapping http="80" https="443"  />
        </port-mappings>

        <headers>
            <!--<content-type-options />-->

            <xss-protection />
            <frame-options />

            <!--<header name="X-Content-Security-Policy" value="default-src 'self'" />-->
            <!--<header name="X-WebKit-CSP" value="default-src 'self'"/>-->
            <!--<header name="X-Content-Type-Options" value="nosniff" />-->
            <!--<hsts/>-->
        </headers>


        <csrf/>
	</http>

	<!-- START: Custom Authentication for Hibernate -->
	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- END: Custom Authentication for Hibernate -->


	<!-- START: Provide hierarchical security inheritance -->
	<beans:bean
		class="org.springframework.security.web.access.expression.WebExpressionVoter">
		<beans:property name="expressionHandler">
			<beans:bean
				class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
				<beans:property name="roleHierarchy" ref="roleHierarchy" />
			</beans:bean>
		</beans:property>
	</beans:bean>


	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_SUPER_ADMIN > ROLE_ADMIN
				ROLE_ADMIN > ROLE_MODERATOR
				ROLE_MODERATOR > ROLE_SUPER_USER
				ROLE_SUPER_USER > ROLE_CREATOR
				ROLE_CREATOR > ROLE_REPORTER
				ROLE_REPORTER > ROLE_USER
				ROLE_USER > ROLE_GUEST
				ROLE_GUEST > ROLE_ANONYMOUSE
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>
	<!-- END: Provide hierarchical security inheritance -->

</beans:beans>